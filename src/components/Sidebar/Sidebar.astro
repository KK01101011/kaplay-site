---
import hamburgerIcon from "@/assets/hamburger.webp";
import kaplayOutlined from "@/assets/kaplay-o.webp";
import Footer from "@/components/Footer/Footer.astro";
import { $lang } from "@/stores";
import { cn } from "@/util/cn";
import { t } from "@/util/i18n";
import { getLangedRoute } from "@/util/path";
import type { MarkdownHeading } from "astro";
import { Image } from "astro:assets";
import {
    getBlogEntries,
    getBookEntries,
    getDocEntries,
    getGuidesEntries,
} from "./entries";
import { SidebarLink } from "./SidebarLink";
import { SidebarList } from "./SidebarList";
import VersionSelector from "./VersionSelector.astro";

type LinkListEntry = {
    title: string;
    link: string;
};

export type SidebarEntry = {
    linkList: LinkListEntry[];
    folder: string;
};

export type SidebarProps = {
    sidebarMode?: "guides" | "reference" | "blog" | "books";
    headings?: MarkdownHeading[];
};

type Props = SidebarProps;

const lang = $lang.get();
const { sidebarMode, headings } = Astro.props;
let renderList: SidebarEntry[] = [];

if (sidebarMode === "guides") {
    renderList = await getGuidesEntries();
}
else if (sidebarMode === "reference") {
    renderList = await getDocEntries();
}
else if (sidebarMode === "blog") {
    renderList = await getBlogEntries();
}
else if (sidebarMode === "books") {
    renderList = await getBookEntries();
}
---

<script src="./paintLinks.ts" />

<div class="drawer lg:drawer-open h-full z-20">
    <input id="sidebar" type="checkbox" class="drawer-toggle" />

    <div class="drawer-content w-full">
        <header class="min-h-16 w-full lg:hidden">
            <nav
                class="lg:hidden flex bg-base-200 w-full h-16 px-4 fixed items-center justify-between"
            >
                <label
                    for="sidebar"
                    class="lg:hidden flex"
                >
                    <figure>
                        <Image
                            src={hamburgerIcon}
                            width="64"
                            height="64"
                            alt="hamburger icon"
                        />
                    </figure>
                </label>

                {
                    headings && headings.length > 0 && (
                        <aside class="2xl:hidden">
                            <select
                                class="select select-sm"
                                onchange="window.location.href = this.value"
                            >
                                {
                                    headings?.map((heading) => (
                                        <option
                                            value={`#${heading.slug}`}
                                            class={cn(
                                                {
                                                    "text-xl font-semibold": heading.depth === 1,
                                                    "text-lg": heading.depth === 2,
                                                    "text-base": heading.depth >= 3,
                                                },
                                            )}
                                        >
                                            {heading.text}
                                        </option>
                                    ))
                                }
                            </select>
                        </aside>
                    )
                }
            </nav>
        </header>

        <main class="w-full flex flex-col lg:flex-row">
            {
                headings && headings.length > 0 && (
                    <aside
                        class="hidden 2xl:flex fixed top-1/2 right-0 transform -translate-y-1/2 z-50 px-4 bg-base-300 rounded-l-box"
                    >
                        <ul
                            class="min-h-96 max-h-96 overflow-auto max-w-60 w-64 flex flex-col p-4 gap-2"
                        >
                            {
                                headings?.map((heading) => (
                                    <li>
                                        <a
                                            href={`#${heading.slug}`}
                                            class={cn(
                                                `link link-hover`,
                                                {
                                                    "text-xl font-semibold": heading.depth === 1,
                                                    "text-lg": heading.depth === 2,
                                                    "text-base": heading.depth >= 3,
                                                },
                                            )}
                                        >
                                            {heading.text}
                                        </a>
                                    </li>
                                ))
                            }
                        </ul>
                    </aside>
                )
            }

            <div class="w-full">
                <slot />
            </div>
        </main>

        <Footer />
    </div>

    <div class="drawer-side h-dvh lg:bg-base-300 z-50">
        <label
            for="sidebar"
            aria-label="close sidebar"
            class="drawer-overlay"
        ></label>
        <div
            class="p-4 w-72 min-h-full bg-base-300 text-base-content"
            transition:persist
        >
            <figure>
                <a class="btn btn-ghost h-max" href={getLangedRoute(lang, "/")}>
                    <Image
                        src="/kaplay.webp"
                        alt="kaplay logo"
                        class="w-52 h-24 aspect-auto object-contain"
                        width={208}
                        height={100}
                        loading={"eager"}
                    />
                </a>
            </figure>
            <div class="divider"></div>
            <button
                class="btn border-primary w-full mb-4"
                onclick="document.querySelector('#search-modal')?.showModal()"
            >
                Search in KAPLAY
            </button>
            <div class="px-4 pb-4">
                <VersionSelector />
            </div>
            <div class="divider"></div>
            <ul class="flex-col gap-2">
                <SidebarLink href="/" lang={lang} icon="home">{
                    t(lang, "sidebar.home")
                }</SidebarLink>
                <SidebarLink
                    href="https://kaboomjs.com/discord"
                    target="_blank"
                    lang={lang}
                    noTranslate
                    icon="discord"
                >
                    Discord
                </SidebarLink>
                <SidebarLink
                    href="https://github.com/kaplayjs/kaplay"
                    target="_blank"
                    lang={lang}
                    noTranslate
                    icon="github"
                >
                    GitHub
                </SidebarLink>
                <SidebarLink
                    href="/changelog"
                    lang={lang}
                    noTranslate
                    icon="pog"
                >
                    What's new on v4000
                </SidebarLink>
                <SidebarLink
                    href="https://play.kaplayjs.com"
                    target="_blank"
                    lang={lang}
                    noTranslate
                    icon="controller"
                >
                    {t(lang, "sidebar.playground")}
                </SidebarLink>
                <SidebarLink
                    href="https://opencollective.com/kaplay"
                    target="_blank"
                    lang={lang}
                    noTranslate
                    icon="donate"
                >
                    Donate to KAPLAY
                </SidebarLink>
            </ul>
            <div class="divider"></div>
            <ul class="flex-col gap-2">
                <SidebarLink
                    href="/guides/install"
                    lang={lang}
                    icon="guides"
                    reloadAll
                >{t(lang, "sidebar.guides")}</SidebarLink>
                <SidebarLink
                    href="/doc/kaplay"
                    lang={lang}
                    icon="api"
                    reloadAll
                >{t(lang, "sidebar.refdoc")}</SidebarLink>
                <SidebarLink href="/blog" lang={lang} icon="blog" reloadAll>{
                    t(lang, "sidebar.blog")
                }</SidebarLink>
            </ul>
            <div class="divider"></div>
            <SidebarList
                sidebarMode={sidebarMode}
                sidebarEntries={renderList}
            />
        </div>
    </div>
</div>

<style>
</style>
